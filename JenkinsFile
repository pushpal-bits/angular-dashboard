deployJob()
def deployJob() {
node('slave') {
  stageEnvCheck()

  stage('checkout-scm'){
    checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/VivekGopal-BITS/angular-dashboard.git']]])
  }

  stage('Build') {
    sh 'npm install'
    sh 'npm run-script build'
  } 
  
  stage('Test') {
    sh 'npm run-script lint' 
  }   
  stage('Deploy') {
    echo "......> ${env.ENV_DEPLOY}"
    if("${env.ENV_DEPLOY}" == "Dev") {
    echo "Deploying to Development" 
    az login --service-principal --username  'b1ceefe9-0f30-43ee-a1cb-d541238376fb' --password  'D1GD1Z~uL-IondLT1d~eJOp0_C~846gm3N' --tenant  '9d52157d-5116-4429-8a59-a1e81bd71c63';
    az storage blob upload-batch -d mycontainer -s dist
    }
    if("${env.ENV_DEPLOY}" == "Staging") {
    echo "Deploying to Staging" 
    }
    if("${env.ENV_DEPLOY}" == "Prod") {
    echo "Deploying to Prod" 
    }
  }  



}
}

def stageEnvCheck() {
  stage("User Input"){
    timeout(5){
      def ENV_PARAM = input message: 'Deployment Hardstop check', ok: 'Proceed', parameters: [
        choice(name: 'ENV', choices: ['Dev','Staging', 'Prod'].join('\n'), description: 'Select appropriate environment"')
      ]
      env.ENV_DEPLOY = "${ENV_PARAM}"
    }
  }
}

